# Importing necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats
from sklearn.datasets import load_iris
from sklearn.linear_model import LinearRegression

# Load the Iris dataset
data = load_iris()
df = pd.DataFrame(data.data, columns=data.feature_names)
df['species'] = pd.Categorical.from_codes(data.target, data.target_names)

# Descriptive statistics
desc_stats = df.describe()
print(desc_stats)

# Visualizing Sepal Length distribution
plt.figure(figsize=(8, 6))
sns.histplot(df['sepal length (cm)'], kde=True, bins=20, color='blue')
plt.title('Distribution of Sepal Length')
plt.xlabel('Sepal Length (cm)')
plt.ylabel('Frequency')
plt.show()

# Pairplot of all features
sns.pairplot(df, hue='species', height=2.5)
plt.show()

# One-sample t-test
t_stat, p_value = stats.ttest_1samp(df['sepal length (cm)'], 5.0)
print("One-sample t-test:")
print(f"T-statistic: {t_stat}, P-value: {p_value}")

# Two-sample t-test between Setosa and Versicolor species
setosa = df[df['species'] == 'setosa']['sepal length (cm)']
versicolor = df[df['species'] == 'versicolor']['sepal length (cm)']
t_stat, p_value = stats.ttest_ind(setosa, versicolor)
print("\nTwo-sample t-test (Setosa vs Versicolor):")
print(f"T-statistic: {t_stat}, P-value: {p_value}")

# Linear Regression
X = df[['sepal width (cm)']]
y = df['sepal length (cm)']
model = LinearRegression()
model.fit(X, y)
slope = model.coef_[0]
intercept = model.intercept_

# Plotting the regression line
plt.figure(figsize=(8, 6))
plt.scatter(X, y, color='blue', label='Data points')
plt.plot(X, model.predict(X), color='red', label='Regression line')
plt.title('Linear Regression: Sepal Width vs Sepal Length')
plt.xlabel('Sepal Width (cm)')
plt.ylabel('Sepal Length (cm)')
plt.legend()
plt.show()
